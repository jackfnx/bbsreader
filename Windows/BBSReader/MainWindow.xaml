<Window x:Class="BBSReader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:BBSReader"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Background="{DynamicResource MaterialDesignPaper}"
        Foreground="{DynamicResource MaterialDesignFont}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Title="MainWindow" Height="600" Width="1024" KeyUp="Window_KeyUp" Loaded="Window_Loaded" Unloaded="Window_Unloaded" Closing="Window_Closing" SizeChanged="Window_SizeChanged">
    <Window.Resources>
        <Style x:Key="DisableOnBeFolder" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsFolder}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisableOnNotBeFolder" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsFolder}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisableOnBeFavorite" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DisableOnNotBeFolder}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Favorite}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisableOnNotBeFavorite" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DisableOnNotBeFolder}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Favorite}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisableOnSimple" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DisableOnNotBeFolder}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SKType}" Value="Simple">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisableOnUnread" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DisableOnBeFolder}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Read}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <ContextMenu x:Key="KeywordOperationsContextMenu" Background="{DynamicResource MaterialDesignPaper}">
            <MenuItem Header="unread" Name="UnreadContextMenu" Click="UnreadContextMenu_Click" Style="{StaticResource DisableOnUnread}" />
            <MenuItem Header="view in browser" Name="ViewUrlContextMenu" Click="ViewUrlContextMenu_Click" Style="{StaticResource MaterialDesignMenuItem}"/>
            <MenuItem Header="download multi-floors .txt" Name="DownloadDetailContextMenu" Click="DownloadDetailContextMenu_Click" Style="{StaticResource DisableOnBeFolder}"/>
            <MenuItem Header="delete downloaded .txt" Name="DeleteTxtContextMenu" Click="DeleteTxtContextMenu_Click" Style="{StaticResource DisableOnBeFolder}"/>
            <MenuItem Header="add keyword to favorites" Name="AddFavoritesContextMenu" Click="AddFavoritesContextMenu_Click" Style="{StaticResource DisableOnBeFavorite}"/>
            <MenuItem Header="edit keyword alias" Name="EditKeywordAliasContextMenu" Click="EditKeywordAliasContextMenu_Click" Style="{StaticResource DisableOnNotBeFavorite}"/>
            <MenuItem Header="remove keyword from favorites" Name="RemoveFavoritesContextMenu" Click="RemoveFavoritesContextMenu_Click" Style="{StaticResource DisableOnNotBeFavorite}"/>
            <MenuItem Header="add keyword to black list" Name="BlackContextMenu" Click="BlackContextMenu_Click" Style="{StaticResource DisableOnNotBeFolder}"/>
            <MenuItem Header="set advanced keyword" Name="SetAdvancedContextMenu" Click="SetAdvancedKeywordContextMenu_Click" Style="{StaticResource DisableOnNotBeFolder}"/>
            <MenuItem Header="cancel advanced keyword" Name="CancelAdvancedContextMenu" Click="CancelAdvancedKeywordContextMenu_Click" Style="{StaticResource DisableOnSimple}"/>
            <MenuItem Header="collect the single article" Name="CollectSingleArticle" Click="CollectSingleArticle_Click" Style="{StaticResource DisableOnBeFolder}"/>
        </ContextMenu>
        <Style x:Key="lv" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignGridViewItem}">
            <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
            <Setter Property="Foreground" Value="Wheat" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ContextMenu" Value="{StaticResource KeywordOperationsContextMenu}" />
            <Setter Property="ToolTip" Value="{Binding Path=Tooltip}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Favorite}" Value="True">
                    <Setter Property="Control.Background" Value="DodgerBlue" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Favorite}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="Magenta" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Favorite}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="DeepSkyBlue" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SKType}" Value="Advanced">
                    <Setter Property="Control.Background" Value="CornflowerBlue" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Advanced" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="Magenta" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Advanced" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="LightBlue" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SKType}" Value="Author">
                    <Setter Property="Control.Background" Value="DarkSlateBlue" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Author" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="Magenta" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Author" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="BlueViolet" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SKType}" Value="Manual">
                    <Setter Property="Control.Background" Value="DimGray" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Manual" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="Magenta" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SKType}" Value="Manual" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="CadetBlue" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsFolder}" Value="False" />
                        <Condition Binding="{Binding Path=Downloaded}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Background" Value="{StaticResource MaterialDesignPaper}" />
                    <Setter Property="Control.Foreground" Value="LightGray" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=Read}" Value="False">
                    <Setter Property="Control.FontWeight" Value="Bold" />
                    <Setter Property="Control.Foreground" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Image x:Key="BackIcon" Source="back.png" />
        <Style TargetType="Ellipse" x:Key="Indicator">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                    <Setter Property="Fill" Value="Red" />
                    <Setter Property="ToolTip" Value="Server STOP" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                    <Setter Property="Fill" Value="Lime" />
                    <Setter Property="ToolTip" Value="Server RUNNING" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <Ellipse x:Name="ServerInd" DockPanel.Dock="Right" Width="20" Height="20" Margin="10,3,10,3" Style="{StaticResource Indicator}" />
            <ToolBarTray DockPanel.Dock="Left" Style="{DynamicResource MaterialDesignToolBarTray}">
                <ToolBar>
                    <Button x:Name="UpdateButton" Content="Update" Click="UpdateButton_Click" />
                    <Button x:Name="DownloadButton" Content="Download" Click="DownloadButton_Click" />
                    <Button x:Name="PacketButton" Content="Packet" Click="PacketButton_Click" />
                    <Separator />
                    <TextBox x:Name="SearchBox" Width="300">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding StartSearch}" CommandParameter="{Binding ElementName=SearchBox, Path=Text}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button x:Name="SearchButton" Content="Search" Click="SearchButton_Click" />
                    <Button x:Name="ReloadButton" Content="Reload" Click="ReloadButton_Click" />
                </ToolBar>
            </ToolBarTray>
        </DockPanel>
        <Grid>
            <ListView x:Name="TopicListView" ItemsSource="{Binding}" ItemContainerStyle="{StaticResource lv}" BorderThickness="0">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Title" Width="500" DisplayMemberBinding="{Binding Path=Title}"/>
                        <GridViewColumn Header="Author" Width="100" DisplayMemberBinding="{Binding Path=Author}"/>
                        <GridViewColumn Header="Time" Width="100" DisplayMemberBinding="{Binding Path=Time}"/>
                        <GridViewColumn Header="Url" Width="160" DisplayMemberBinding="{Binding Path=Url}"/>
                        <GridViewColumn Header="Source" Width="80" DisplayMemberBinding="{Binding Path=Source}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="ArticleListView" ItemsSource="{Binding}" ItemContainerStyle="{StaticResource lv}" BorderThickness="0" Visibility="Hidden">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Title" Width="500" DisplayMemberBinding="{Binding Path=Title}"/>
                        <GridViewColumn Header="Author" Width="100" DisplayMemberBinding="{Binding Path=Author}"/>
                        <GridViewColumn Header="Time" Width="100" DisplayMemberBinding="{Binding Path=Time}"/>
                        <GridViewColumn Header="Url" Width="160" DisplayMemberBinding="{Binding Path=Url}"/>
                        <GridViewColumn Header="Source" Width="80" DisplayMemberBinding="{Binding Path=Source}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <fa:ImageAwesome x:Name="LoadingIcon" Icon="Refresh" Spin="True" Height="48" Width="48" Visibility="Hidden" />
            <Grid x:Name="ReaderView" Visibility="Hidden">
                <ScrollViewer x:Name="ReaderScroll">
                    <TextBox x:Name="ReaderText" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" FontSize="16" IsReadOnly="True" Background="Transparent" Foreground="LightGray"/>
                </ScrollViewer>
            </Grid>
            <Button x:Name="BackButton" Width="128" Height="128" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{StaticResource BackIcon}" BorderBrush="Transparent" Opacity="0.2" Click="BackButton_Click">
                <Button.Background>
                    <ImageBrush/>
                </Button.Background>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="BackButton" Storyboard.TargetProperty="Opacity" From="0.2" To="1" Duration="0:0:1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Button.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="BackButton" Storyboard.TargetProperty="Opacity" From="1" To="0.2" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </Grid>
    </DockPanel>
</Window>
